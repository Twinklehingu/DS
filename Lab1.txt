"""CPSC 5520, Seattle University 
Lab1: Simple client"""

import sys            #sys module provides various functions and variables that are manipulated the various part in python
import socket         #It provides various objects, constants and some extentions for creating whole network aplication including server and client
import pickle          #it is used for coverting python object into bytes stream to store it in database

if len(sys.argv) != 3:                                              
    print("pyhton3 lab_1.py TO TEST")
    exit(1)

host= sys.argv[1]            #getting host started
port = int(sys.argv[2])
try:                                                                
    a = socket.socket(socket.AF_INET,socket.SOCK_STREAM)  #now starting with socket server
    a.settimeout(1.5)                                     # settings for timeout session (connection refused)
    a.connect((host, port))                               #connecting host with port
    a.sendall(pickle.dumps('JOIN'))                       # sending all message by using pickle.dumps  (these message to send to the GCD is just the text JOIN)
    list_people = pickle.loads(a.recv(1024))            #receiving the msg from GCD and other groups

    print('people')                                  
    for i in range(len(list_people)):
     print(list_people[i])                                #printing list of people 

    for people in list_people:                                         
        Host = people['host']                                           
        Port = people['port']
        try:
            a = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            a.settimeout(1.5)                             # timeout session
            a.connect((Host,Port))
            a.sendall(pickle.dumps('HELLO'))             #printing hello
            ANSWER = pickle.loads(a.recv(1024))              # receiving messges
            print(people)
            print(ANSWER)
        except OSError as error:                                    #handling the errors
            print(people)
            print(error)
            continue

except OSError as error:                                         # printing out error message
    print('ERROR',error)